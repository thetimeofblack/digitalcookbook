package CookBookView.listview;

import java.awt.ScrollPane;

import javafx.event.ActionEvent;
import javafx.fxml.FXML;

import javafx.scene.text.Text;
import javafx.stage.Stage;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.image.ImageView;

import javafx.scene.input.MouseEvent;
import javafx.scene.layout.Pane;
import javafx.scene.layout.VBox;

public class ListviewController {
	@FXML
	private TextField searcher;
	@FXML
	private Button logout;
	@FXML
	private ImageView vegen;
	@FXML
	private ImageView egg_milk;
	@FXML
	private ImageView meat;
	@FXML
	private Text Recipename;
	@FXML
	private Label favourite;
	@FXML
	private VBox vbox;
	
	private Stage stage;
	private Scene scene;
	
	@FXML
	private ScrollPane pane;
	

	// Event Listener on Button[#logout].onAction
	@FXML
	public void logOut(ActionEvent event) {
		// TODO Autogenerated
	}

	// Event Listener on ImageView[#vegen].onDragDetected
	@FXML
	public void showVegen(MouseEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on ImageView[#egg_milk].onDragDetected
	@FXML
	public void showEgg_Mlik(MouseEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on ImageView[#meat].onDragDetected
	@FXML
	public void showMeat(MouseEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Text[#Recipename].onDragDetected
	@FXML
	public void showRecipename(MouseEvent event) {
		// TODO Autogenerated
	}
	public void setStage(Stage stage) {
		this.stage = stage; 
	}
	
	public void setScene(Scene scene) {
		this.scene = scene;
	}
	
	public VBox getVBox() {
		return this.vbox;
	}

	public ScrollPane getPane() {
		return pane;
	}

	public void setPane(ScrollPane pane) {
		this.pane = pane;
	}
	
}
package CookBookView.listview;

import java.io.IOException;
import java.sql.SQLException;
import java.util.Iterator;
import java.util.LinkedList;

import CookBookDataBaseAcess.DatabaselayerObject;
import CookBookEntity.Recipe;
import CookBookView.firstview.fvController;
import CookBookView.searchview.SearchViewController;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.Pane;
import javafx.scene.layout.VBox;
import javafx.stage.Stage;

public class ListviewController {
	@FXML
	private VBox recipeVBox;
	@FXML
	private Button logout;
	@FXML
	private Label toSearchView;
	private Stage stage;
	private Scene scene;
	private DatabaselayerObject databaselayerObject;

	public void logOut(ActionEvent event) throws IOException {
		FXMLLoader loader = new FXMLLoader(getClass().getResource("../firstview/fv.fxml"));
		Parent root = loader.load();
		fvController controller = loader.getController();
		controller.setStageAndScene(stage, scene);
		scene.setRoot(root);
		stage.setScene(scene);
		stage.show();
	}

	public void backToSearchView(MouseEvent event) throws IOException {
		FXMLLoader loader = new FXMLLoader(getClass().getResource("../searchview/searchView.fxml"));
		GridPane root = loader.load();
		SearchViewController controller = loader.getController();
		controller.setStageAndScene(stage, scene);
		controller.setDatabaselayerObject(databaselayerObject);
		scene.setRoot(root);
		stage.setScene(scene);
		stage.show();
	}

	public void createSearchedRecipeSubview(TextField searcher) throws IOException {
		LinkedList<Recipe> list = databaselayerObject.showsearchingrecipelist(searcher.getText());
		for (int i = 1; i <= list.size(); i++) {
			Recipe recipe = list.get(i - 1);
			FXMLLoader loader = new FXMLLoader(getClass().getResource("subview.fxml"));
			Pane subView = loader.load();
			SubviewController controller = loader.getController();
			controller.setRecipe(recipe);
			controller.setStageAndScene(stage, scene);
			controller.setDatabaselayerObject(databaselayerObject);
			recipeVBox.getChildren().add(subView);
		}
	}

	public void createUserRecipeSubView() throws IOException {
		LinkedList<Recipe> list = databaselayerObject.getallrecipelist();
		for (int i = 1; i <= list.size(); i++) {
			Recipe recipe = list.get(i - 1);
			FXMLLoader loader = new FXMLLoader(getClass().getResource("subview.fxml"));
			Pane subView = loader.load();
			SubviewController controller = loader.getController();
			controller.setRecipe(recipe);
			controller.setStageAndScene(stage, scene);
			controller.setDatabaselayerObject(databaselayerObject);
			recipeVBox.getChildren().add(subView);
		}
	}

	public void createUserFavouriteRecipeSubView() throws IOException, SQLException {
		LinkedList<Recipe> list = databaselayerObject.getallrecipelist();
		for (int i = 1; i <= list.size(); i++) {
			Recipe recipe = list.get(i - 1);
			if (databaselayerObject.judgefavourite(recipe)) {
				FXMLLoader loader = new FXMLLoader(getClass().getResource("subview.fxml"));
				Pane subView = loader.load();
				SubviewController controller = loader.getController();
				controller.setRecipe(recipe);
				controller.setStageAndScene(stage, scene);
				controller.setDatabaselayerObject(databaselayerObject);
				recipeVBox.getChildren().add(subView);
			}
		}
	}

	public void createRankedRecipesSubView() throws IOException {
		LinkedList<Recipe> list = databaselayerObject.getallrecipelist();
		for (int i = 1; i <= list.size(); i++) {
			Recipe recipe = list.get(i - 1);
			if (recipe.getRate() > 0) {
				FXMLLoader loader = new FXMLLoader(getClass().getResource("subview.fxml"));
				Pane subView = loader.load();
				SubviewController controller = loader.getController();
				controller.setRecipe(recipe);
				controller.setStageAndScene(stage, scene);
				controller.setDatabaselayerObject(databaselayerObject);
				recipeVBox.getChildren().add(subView);
			}
		}
	}

	public void setStage(Stage stage) {
		this.stage = stage;
	}

	public void setScene(Scene scene) {
		this.scene = scene;
	}

	public void setStageAndScene(Stage stage, Scene scene) {
		this.stage = stage;
		this.scene = scene;
	}

	public void setDatabaselayerObject(DatabaselayerObject databaselayerObject) {
		this.databaselayerObject = databaselayerObject;
	}

}
